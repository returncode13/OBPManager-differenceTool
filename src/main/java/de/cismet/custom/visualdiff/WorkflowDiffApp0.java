/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.custom.visualdiff;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import org.netbeans.api.diff.DiffView;
import org.openide.util.Exceptions;

/**
 *
 * @author adira0150
 */
public class WorkflowDiffApp0 extends javax.swing.JFrame {

    private static final String FILENAME1_TEXT = "/d/home/adira0150/programming/java/testingGrounds/duglogs/seq61_cab7_g1.log";
    private static final String FILENAME2_TEXT = "/d/home/adira0150/programming/java/testingGrounds/duglogs/notes.txt";
    private static final String MIMETYPE_TEXT = "text/plain";
     private DiffPanel pnlDiff;
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlControls = new javax.swing.JPanel();
        btnPrevDifference = new javax.swing.JButton();
        btnNextDifference = new javax.swing.JButton();
        separator = new javax.swing.JSeparator();
        btnDiffTextFiles = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(WorkflowDiffApp0.class, "WorkflowDiffApp0.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(462, 37));
        setPreferredSize(new java.awt.Dimension(460, 37));

        pnlControls.setMinimumSize(new java.awt.Dimension(462, 37));
        pnlControls.setName(""); // NOI18N
        pnlControls.setPreferredSize(new java.awt.Dimension(460, 37));

        org.openide.awt.Mnemonics.setLocalizedText(btnPrevDifference, org.openide.util.NbBundle.getMessage(WorkflowDiffApp0.class, "WorkflowDiffApp0.btnPrevDifference.text")); // NOI18N
        btnPrevDifference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevDifferenceActionPerformed(evt);
            }
        });
        pnlControls.add(btnPrevDifference);

        org.openide.awt.Mnemonics.setLocalizedText(btnNextDifference, org.openide.util.NbBundle.getMessage(WorkflowDiffApp0.class, "WorkflowDiffApp0.btnNextDifference.text")); // NOI18N
        btnNextDifference.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextDifferenceActionPerformed(evt);
            }
        });
        pnlControls.add(btnNextDifference);

        separator.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        separator.setPreferredSize(new java.awt.Dimension(2, 23));
        pnlControls.add(separator);

        org.openide.awt.Mnemonics.setLocalizedText(btnDiffTextFiles, org.openide.util.NbBundle.getMessage(WorkflowDiffApp0.class, "WorkflowDiffApp0.btnDiffTextFiles.text")); // NOI18N
        btnDiffTextFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiffTextFilesActionPerformed(evt);
            }
        });
        pnlControls.add(btnDiffTextFiles);

        getContentPane().add(pnlControls, java.awt.BorderLayout.SOUTH);

        getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(WorkflowDiffApp0.class, "WorkflowDiffApp0.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrevDifferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevDifferenceActionPerformed
        if (pnlDiff.getDiffView() != null) {
            final DiffView view = pnlDiff.getDiffView();
            if (view.canSetCurrentDifference()) {
                view.setCurrentDifference(((view.getCurrentDifference() == 0) ? (view.getDifferenceCount() - 1)
                        : (view.getCurrentDifference() - 1))
                        % view.getDifferenceCount());
            }
        }
    }//GEN-LAST:event_btnPrevDifferenceActionPerformed

    private void btnNextDifferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextDifferenceActionPerformed
        if (pnlDiff.getDiffView() != null) {
            final DiffView view = pnlDiff.getDiffView();
            if (view.canSetCurrentDifference()) {
                view.setCurrentDifference((view.getCurrentDifference() + 1) % view.getDifferenceCount());
            }
        }
    }//GEN-LAST:event_btnNextDifferenceActionPerformed

    private void btnDiffTextFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiffTextFilesActionPerformed
       final File file1 = new File(FILENAME1_TEXT);
        final File file2 = new File(FILENAME2_TEXT);
        try {
            pnlDiff.setLeftAndRight(getLines(new FileReader(file1)),
                    MIMETYPE_TEXT,
                    file1.getName(),
                    getLines(new FileReader(file2)),
                    MIMETYPE_TEXT,
                    file2.getName());
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_btnDiffTextFilesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WorkflowDiffApp0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WorkflowDiffApp0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WorkflowDiffApp0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WorkflowDiffApp0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new WorkflowDiffApp0().setVisible(true);
                } catch (Exception ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDiffTextFiles;
    private javax.swing.JButton btnNextDifference;
    private javax.swing.JButton btnPrevDifference;
    private javax.swing.JPanel pnlControls;
    private javax.swing.JSeparator separator;
    // End of variables declaration//GEN-END:variables


 /**
     * Creates new form WorkflowDiffApp
     */
    public WorkflowDiffApp0() throws Exception{
        initComponents();
        setSize(new java.awt.Dimension(729, 706));
        setLocationRelativeTo(null);
         final File file1 = new File(FILENAME1_TEXT);
        final File file2 = new File(FILENAME2_TEXT);

        pnlDiff = new DiffPanel();
        pnlDiff.setLeftAndRight(getLines(new FileReader(file1)),
                MIMETYPE_TEXT,
                file1.getName(),
                getLines(new FileReader(file2)),
                MIMETYPE_TEXT,
                file2.getName());
        getContentPane().add(pnlDiff, BorderLayout.CENTER);
        
    }

    private String getLines(final Reader reader) throws IOException {
        final StringBuilder result = new StringBuilder();
        final BufferedReader bufferedReader = new BufferedReader(reader);

        try {
            String line = null;
            while ((line = bufferedReader.readLine()) != null) {
                result.append(line);
                result.append("\n");
            }
        } finally {
            bufferedReader.close();
        }

        return result.toString();
    }

       


}
